---
- name: Install Project dependencies
  hosts: all
  become: true
  become_user: root
  tasks:
    - name: install apache2, curl, wget and git
      package:
        name:
          - apache2
          - git
          - curl
          - wget
        state: latest

    - name: Install some prerequisites
      package:
        name:
          - ca-certificates
          - apt-transport-https
          - software-properties-common
        state: latest
        update_cache: yes

    - name: Download Keys
      shell: wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg

    - name: Echo Keys to php
      shell: echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/php.list

    - name: Add ppa:ondrej repo
      ignore_errors: true
      apt_repository:
        repo: ppa:ondrej/php
        state: present
        update_cache: yes

    - name: Install PHP8.1 and its core dependencies
      package:
        name:
          - php8.1
          - php8.1-fpm
          - libapache2-mod-php
        state: present

    - name: Install other php dependencies
      package:
        name:
          - php8.1-zip
          - php8.1-mysql
          - php8.1-xml
          - php8.1-curl
          - php8.1-mbstring
          - php8.1-memcache
          - php8.1-opcache
          - unzip
          - php8.1-oauth
          - php8.1-gd
          - php8.1-yaml
        state: present
        update_cache: yes

- name: Install and Configure MySql
  hosts: all
  become: true
  become_user: root
  tasks:
    - name: Install MySql and dependencies
      package:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - default-mysql-server
        - default-mysql-client
        - python3-mysqldb
        - default-libmysqlclient-dev

    - name: Start and Enable MySql service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Enable remote login
      lineinfile:
        path: /etc/mysql/mariadb.conf.d/50-server.cnf
        regexp: "^bind-address"
        line: "bind-address = 0.0.0.0"
        backup: yes
      notify:
             - Restart mysql

    - include_vars: var/db_config.yaml
    - name: Creating remote Root user
      mysql_user:
        login_user: root
        login_password: 'sheyudeywhineme'
        name: "{{ db_user }}"
        host_all: yes
        password: "{{ db_pass }}"
        priv: "*.*:ALL"
        host: '%'
        state: present

    - include_vars: var/db_config.yaml
    - name: Creating MySql database
      mysql_db:
        login_user: root
        login_password: 'sheyudeywhineme'
        name: "{{ db_name }}"
        state: present

    - name: Remove anonymous users
      login_user: root
      login_password: 'sheyudeywhineme'
      ignore_errors: true
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - DELETE FROM mysql.user WHERE User=''
      changed_when: False

  handlers:
    - name: Restart mysql
      service:
        name: mysql
        state: restarted

- name: Cloning the github repo
  hosts: all
  vars:
    repo_url: "https://github.com/f1amy/laravel-realworld-example-app.git"
    working_directory: "/var/www"
    new_folder: "laravel"
  become: true
  become_user: root
  tasks:
    - name: Pull changes from GitHub
      git:
        repo: "{{ repo_url }}"
        dest: "{{ working_directory }}/{{ new_folder }}"

    - name: Change folder ownership and permissions
      file:
        path: "{{ working_directory }}/{{ new_folder }}"
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
        mode: "0775"

    - name: Configure .env file
      template:
        src: files/.env.j2
        dest: "{{ new_folder }}/.env.example"

- name: Install Composer and move it
  hosts: all
  become: true
  become_user: root
  tasks:
    - name: Install Composer
      remote_src: yes
      script: curl -sS https://getcomposer.org/installer | php

    - name: Move Composer
      remote_src: yes
      script: mv composer.phar /usr/local/bin/composer

    - name: Make the composer file executable
      remote_src: yes
      script: chmod +x /usr/local/bin/composer

- name: Configure Laravel App
  hosts: all
  vars:
    working_directory: "/var/www"
    new_folder: "laravel"
  tasks:
    - name: Install dependencies with composer
      become: false
      composer:
        command: install
        args:
          chdir: "{{ working_directory }}/{{ new_folder }}"

    - name: Generate application key
      become: true
      command: php artisan key:generate
      args:
        chdir: "{{ working_directory }}/{{ new_folder }}"

    - name: Configure Cache configuration
      become: true
      command: php artisan migrate:fresh
      args:
        chdir: "{{ working_directory }}/{{ new_folder }}"

    - name: Run Migrations + Seeding
      become: true
      command: php artisan migrate --seed
      args:
        chdir: "{{ working_directory }}/{{ new_folder }}"

- name: Configure Apache to host Laravel application
  hosts: all
  tasks:
    - include_vars: var/apache_config.yaml
    - name: Set up Apache virtual Host
      template:
        src: files/onyekachukwuejiofornweke.conf.j2
        dest: /etc/apache2/sites-available/{{ http_conf }}

    - include_vars: var/apache_config.yaml
    - name: Enable Laravel application
      shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache

    - name: Enable Laravel application
      shell: /usr/sbin/a2enmod rewrite
      notify: Reload Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      when: disable_default
      notify: Reload Apache

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted
